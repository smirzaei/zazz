@model EditUserProfileViewModel

@{
    ViewBag.Title = "Edit Profile";
}

<div class="container color-white-bg margin-top-15 padding-bottom-100 padding-L-R-20 border-radius-5">
    <div class="row-fluid">
        <div class="span12 border-bottom-2" style="margin-bottom: 30px;">
            <h4 class="lead-1">
                <i class="icon-pencil icon-2x"></i>
                Edit Profile
            </h4>
        </div>
    </div>

    <div>

        @using (Html.BeginForm("EditUser", "Users"))
        {
            @Html.AntiForgeryToken()
            <div class="tabbable">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#aboutTab" data-toggle="tab">About</a></li>
                    <li><a href="#profilePicTab" data-toggle="tab">Profile Pictures</a></li>
                    <li><a href="#fbSyncTab" data-toggle="tab">Facebook Sync</a></li>
                    <li><a href="#notificationsTab" data-toggle="tab">Notifications</a></li>
                </ul>
                <div class="tab-content margin-ten">
                    <div class="tab-pane active" id="aboutTab">
                        <a href="~/account/changepassword">Change Password</a>
                        <p style="margin-top: 30px;">

                            <div class="control-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                </div>
                                <div class="editor-field">
                                    @Html.RadioButtonForEnum(model => model.Gender)
                                    @Html.ValidationMessageFor(model => model.Gender, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.FullName, new { @class = "control-label" })
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "span4" })
                                    @Html.ValidationMessageFor(model => model.FullName, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CityId, new { @class = "control-label" })
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.CityId, new SelectList(Model.Cities, "Id", "Name", Model.CityId), "Select City", new { @class = "span4" })
                                    @Html.ValidationMessageFor(model => model.CityId, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.SchoolId, new { @class = "control-label" })
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.SchoolId, new SelectList(Model.Schools, "Id", "Name", Model.SchoolId), "Select School", new { @class = "span4" })
                                    @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "help-inline" })
                                </div>
                            </div>

                            <div class="control-group">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.MajorId, new { @class = "control-label" })
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.MajorId, new SelectList(Model.Majors, "Id", "Name", Model.MajorId), "Select Major", new { @class = "span4" })
                                    @Html.ValidationMessageFor(model => model.MajorId, null, new { @class = "help-inline" })
                                </div>
                            </div>

                        </p>
                    </div>
                    <div class="tab-pane" id="profilePicTab">
                       
                        <div class="control-group" style="height: 120px;">
                            <div class="editor-label">
                                <label class="control-label">Profile Picture</label>
                            </div>
                            <div class="editor-field selectProfilePic">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">Select Picture</button>
                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown">
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="#" data-toggle="modal" data-target="#pg-modal" data-callback="profilePhotoSelected">From gallery</a></li>
                                        <li><a href="#" data-toggle="modal" data-target="#uploadPicModal" data-callback="profilePhotoSelected">Upload picture</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="tab-pane" id="fbSyncTab">
                        <p>
                            <div class="control-group">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.SyncFbEvents) Sync Facebook Events
                                </label>
                            </div>
                            
                        </p>
                    </div>
                    <div class="tab-pane" id="notificationsTab">
                        <p>
                            <div class="control-group">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.SendFbErrorNotification) Send Facebook Sync Error Notifications
                                </label>
                            </div>
                        </p>
                    </div>
                </div>
            </div>
            
            <p class="form-actions">
                <button type="submit" class="btn btn-primary">Submit</button>
                <a href="~/" class="btn">Cancel</a>
            </p>
        }
        
        <div class="modal hide fade" id="cropPromptModal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3>Would you like to crop the photo?</h3>
            </div>

            @*<div class="modal-body">
            </div>*@

            <div class="modal-footer">
                <a href="#" class="btn btn-primary" id="cropLink" target="_blank">Yes</a>
                <a href="#" data-dismiss="modal" class="btn">No</a>
            </div>
        </div>


        @Html.Partial("_PhotoGalleryModal")
        @Html.Partial("_UploadPicModal", true)

    </div>
</div>
