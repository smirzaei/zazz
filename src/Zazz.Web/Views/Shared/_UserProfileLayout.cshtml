@model UserProfileViewModelBase
@{
    ViewBag.Title = Model.UserName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .inputshadow
    {
        /*-webkit-box-shadow: 0px 0px 3px 1px rgba(13,176,246,1);
        -moz-box-shadow: 0px 0px 3px 1px rgba(13,176,246,1);
        box-shadow: 0px 0px 3px 1px rgba(13,176,246,1);*/
        margin-left:0px !important;
        border: 1px solid rgba(82,168,236,0.8);
        box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 8px rgba(82,168,236,0.8);
        border-radius:7px;
    }
    .inputshadow:focus
    {
        border: 1px solid rgba(82,168,236,0.8);
        box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 8px rgba(82,168,236,0.8);
        border-radius:7px;
        outline:none;
    }
</style>
<div class="main-container">

    @*LEFT*@

    <div class="row-fluid">
        <div class="left-pane" style="text-align:center;width: 200px;">
            <div id="changeProfilePicArea">
                @if (Model.UserPhoto.PhotoId == 0)
                {
                    // it's the default image

                    <img class="img-polaroid img-rounded user-profile-img" src="@Model.UserPhoto.PhotoUrl.SmallLink" />
                }
                else
                {
                    <a data-toggle="lightbox" data-target="#photo-@Model.UserPhoto.PhotoId" href="@Model.UserPhoto.PhotoUrl.OriginalLink">
                        <img class="img-polaroid img-rounded user-profile-img" src="@Model.UserPhoto.PhotoUrl.SmallLink" />
                    </a>
                }

                @if (Model.IsSelf)
                {
                    <div class="clearfix"></div>

                    <div id="changeProfilePicBtn" class="selectProfilePic" style="display: none;">
                        <div class="btn-group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Change Picture</button>
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a href="#" data-toggle="modal" data-target="#pg-modal" data-callback="profilePhotoSelected">From gallery</a></li>
                                <li><a href="#" data-toggle="modal" data-target="#uploadPicModal" data-callback="profilePhotoSelected">Upload picture</a></li>
                            </ul>
                        </div>
                    </div>

                }

            </div>

            <div class="name-container">
                <a href="@Url.Action("Profile", "Users", new {id=Model.UserId})"><p class="username-display">@Model.UserName</p></a>
            </div>

            <div class="profile-box">
                @if (!Model.IsSelf)
                {
                    if (Model.IsCurrentUserFollowingTargetUser)
                    {
                        <button data-btn-follow="1" data-id="@Model.UserId"
                                data-url="@Url.Action("Unfollow", "Follow", new {id=Model.UserId})"
                                data-action="unfollow" data-placement="right" class="btn btn-zazz btn-follow">
                            <i class="icon-remove"></i> Unfollow
                        </button>
                    }
                    else if (Model.FollowRequestAlreadySent)
                    {
                        <button data-btn-follow="1"
                                title="Follow request has been sent before. You must wait for the user to accept your request."
                                class="btn btn-follow btn-zazz disabled" disabled="disabled">
                            <i class="icon-ok"></i> Follow
                        </button>
                    }
                    else
                    {
                        <button data-btn-follow="1" data-id="@Model.UserId" data-url="@Url.Action("FollowUser", "Follow", new {id=Model.UserId})"
                                data-action="follow" class="btn btn-zazz btn-follow">
                            <i class="icon-plus"></i> Follow
                        </button>
                    }
                }

                <div class="preview-photos-container pane-box">
                    <div class="pane-title">About</div>
                    <div class="preview-box">
                        <div class="about-item">
                            @if (!String.IsNullOrEmpty(Model.City))
                            {
                                <span><i class="icon-globe"></i>&nbsp;<a href="#" data-toggle="modal" data-target="#selectCityModal">@Model.City</a></span>
                            }else{
                                <span><i class="icon-globe"></i>&nbsp;<a href="#" data-toggle="modal" data-target="#selectCityModal">Choose your city</a></span>
                            }
                        </div>
                        <div class="about-item">
                            @if (!String.IsNullOrEmpty(Model.School))
                            {
                                <span><i class="icon-building"></i>&nbsp;<a href="#" data-toggle="modal" data-target="#selectSchoolModal">@Model.School</a></span>
                            }else{
                                <span><i class="icon-building"></i>&nbsp;<a href="#" data-toggle="modal" data-target="#selectSchoolModal">Choose your school</a></span>
                            }
                        </div>
                        <div class="about-item">
                            @if (!String.IsNullOrEmpty(Model.tagline))
                            {
                                <span><i class="icon-book"></i>&nbsp;@Model.tagline</span>
                            }
                            else if (!String.IsNullOrEmpty(Model.Major))
                            {
                                <span><i class="icon-book"></i>&nbsp;@Model.Major</span>
                            }
                        </div>
                    </div>
                </div>
  
            </div>

            @if(Model.PreviewPhotos != null)
            {
                <div class="preview-photos-container pane-box">
                    <div class="pane-title">Photos</div>
                    <div class="preview-box">
                        @foreach (var p in Model.PreviewPhotos)
                        {
                            <a data-toggle="lightbox" data-target="#photo-@p.PhotoId" href="@p.PhotoUrl.OriginalLink">
                                <img style="background: url('@p.PhotoUrl.MediumLink') no-repeat center center;" />
                            </a>
                        }

                        <div class="addPhotoBtn">
                            <a href="#" data-toggle="modal" data-target="#uploadPicModal"><i class="icon-plus-sign icon-4x"></i></a>
                            <br />
                            <span>Add Photos</span>
                        </div>
                    </div>
                </div>
            }
        </div>

        @*CENTER*@
        <div class="center-panel color-white-bg  box-shadow">
            <div class="row-fluid margin-bottam-20 center-top-color follow-img margin-top-15 box-shadow-2">
                <span class="arrow-left hidden-phone"></span>
                <span class="arrow-right hidden-phone"></span>
                <div class="span4 margin-top-10">
                    <a class="black" href="@Url.Action("Followers", "Users", new { id = Model.UserId })">Followers</a>
                    <span class="follow-no-bg margin-left-10">@Model.FollowersCount</span>
                </div>
                <div class="span4 margin-top-10">
                    <a class="black" href="@Url.Action("Following", "Users", new { id = Model.UserId })">Following</a>
                    <span class="follow-no-bg margin-left-10">@Model.FollowingsCount</span>
                </div>
                <div class="span3 margin-top-10">
                    <a class="black" href="@Url.Action("LikedFeed", "Users", new { id = Model.UserId })">Likes</a>
                    <span class="follow-no-bg margin-left-10">@Model.ReceivedLikesCount</span>
                </div>
            </div>

            <div id="centerColumn" class="padding-L-R-10">
                @RenderBody()
            </div>
        </div>
        
        @*RIGHT*@
        <div class="right-pane">
            <div class="categories-stat-container pane-box">
                <div class="pane-title">Categories</div>
                <form id="cat-select" action="">
                @foreach (var c in Model.CategoriesStats)
                {
                    <input type="checkbox" id="@c.CategoryName.ToFileName()" name="categories" value="@c.CategoryName">
                    <label for="@c.CategoryName.ToFileName()" class="category">
                        <img class="category-img" src="@String.Format("/Images/categories/{0}.png", c.CategoryName.ToFileName())" />
                        <img class="category-img-active" src="@String.Format("/Images/categories/{0}-active.png", c.CategoryName.ToFileName())" />
                        <span class="category-text">
                            <span class="category-text-header">@c.CategoryName</span>
                            <span>@c.UsersCount talking about this.</span>
                        </span>
                    </label>
                }
                </form>
            </div>
        </div>
    </div>

</div>

@if (Model.IsSelf)
{
    @Html.Partial("_CropPromptModal")
    @Html.Partial("_DeletePicPromptModal")
    @Html.Partial("_PhotoGalleryModal")
    @Html.Partial("_UploadPicModal", true)   
    @Html.Partial("_SelectCityModal")
    @Html.Partial("_SelectSchoolModal")
}

@section Scripts
{
    @RenderSection("Scripts", false)

    @if (Model.UserPhoto.PhotoId != 0)
    {
        @Html.Partial("_LightBoxPartial", Model.UserPhoto)
    }
}