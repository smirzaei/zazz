@model Zazz.Web.Models.OAuthRegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
}

<div class="container">
    <div>
        <h1>Zazz</h1>
    </div>

    <div class="well" style="margin-top: 50px;">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(m => m.OAuthProvidedData)
            @Html.HiddenFor(m => m.ProvidedDataSignature)
            
            <fieldset>
                <legend>Choose a username and password.</legend>
                @if (TempData["alert"] != null && ((bool)TempData["alert"]))
                {
                    <div class="alert alert-block @TempData["alertClass"]">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <p>@TempData["alertMessage"]</p>
                    </div>
                }

                <div class="row">
                    <div class="span8">

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.UserName, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.UserName, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        @Html.HiddenFor(m => m.Email)

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Password, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.Password, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.Password, null, new { @class = "help-inline" })
                            </div>

                        </div>
                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Gender, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                @Html.RadioButtonForEnum(model => model.Gender)
                                @Html.ValidationMessageFor(model => model.Gender, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.AccountType, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                <label class="radio" for="_AccountType_User">
                                    <input id="_AccountType_User" checked="checked" data-val="true" data-val-required="The AccountType field is required." name="AccountType" type="radio" value="User" />
                                    User
                                </label>
                                <label class="radio" for="_AccountType_ClubAdmin">
                                    <input id="_AccountType_ClubAdmin" name="AccountType" type="radio" value="ClubAdmin" />
                                    Club Admin
                                </label>
                            </div>
                        </div>

                        <div id="clubDetails" class="control-group hide">
                            <hr />
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ClubName, new { @class = "control-label required" })
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.ClubName, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.ClubName, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <h6>THE FOLLOWING FIELDS ARE OPTIONAL</h6>
                        <hr style="margin-top: 0;" />
                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.FullName, new { @class = "control-label" })
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.FullName, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.FullName, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.PublicEmail, new { @class = "control-label" })
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.PublicEmail, new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.PublicEmail, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.SchoolId, new { @class = "control-label" })
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.SchoolId, new SelectList(Model.Schools, "Id", "Name"), "Select School", new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.CityId, new { @class = "control-label" })
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.CityId, new SelectList(Model.Cities, "Id", "Name"), "Select City", new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.CityId, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.MajorId, new { @class = "control-label" })
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.MajorId, new SelectList(Model.Majors, "Id", "Name"), "Select Major", new { @class = "span4" })
                                @Html.ValidationMessageFor(model => model.MajorId, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <hr />
                        <p>
                            <input type="submit" value="Register" class="btn btn-primary" style="margin-top: 25px;" />
                        </p>

                    </div>
                </div>
            </fieldset>
            
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/js")
}
