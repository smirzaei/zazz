@using PoliteCaptcha
@model RegisterUserViewModel
@{
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
    ViewBag.Title = "Register";
}

<div class="container color-white-bg margin-top-15 padding-bottom-100 padding-L-R-20 border-radius-5">
    <div class="row-fluid">
        <div class="span12 border-bottom-2">
            <h4 class="lead-1">
                <i>
                    <img src="/Images/Register.png"></i>
                Register
            </h4>
        </div>
    </div>

    <div class="row-fluid margin-top-10 margin-bottam-20">

        <div class="span6">
            <div class="zazz-form zazz-form2">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
            
                    <fieldset>
                        @if (TempData["alert"] != null && ((bool)TempData["alert"]))
                        {
                            <div class="alert alert-block @TempData["alertClass"]">
                                <button type="button" class="close" data-dismiss="alert">&times;</button>
                                <p>@TempData["alertMessage"]</p>
                            </div>
                        }


                        <div class="control-group">
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.UserName, new { @placeholder = "Username" })
                                @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.Password, new { @placeholder = "Password" })
                                @Html.ValidationMessageFor(model => model.Password, null, new { @class = "help-inline" })
                            </div>

                        </div>
                        <div class="control-group">
                            <div class="editor-field">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.UserType, new { @class = "control-label" })
                            </div>
                            <div class="editor-field lp-radio">
                                @Html.RadioButtonForEnum(model => model.UserType)
                                @Html.ValidationMessageFor(model => model.UserType, null, new { @class = "help-inline" })
                            </div>
                             <div class="lp-promoters">
                                @Html.DropDownListFor(model => model.PromoterType, new SelectList(Model.PromoterTypes), "Select Promoter Type", new { @class = "lp-select" })
                                @Html.ValidationMessageFor(model => model.PromoterType, null, new { @class = "help-inline" })
                            </div>

                            <div class="lp-majors">
                                <select id="taglineselect">
                                    @{
                                        <option value="">Select TagLine</option>
                                        foreach(var major in Model.Majors)
                                        {
                                            <option>@major.Name</option>
                                        }
                                        <option value="8">Write Your Own Tagline</option>
                                    }
                                </select>
                                @Html.TextBoxFor(model => model.TagLine, new { @placeholder = "Tag Line", @class = "register-input", @maxlength = "50" })
                                @Html.ValidationMessageFor(model => model.TagLine, null, new { @class = "help-inline" })
                                <!--
                                @Html.DropDownListFor(model => model.MajorId, new SelectList(Model.Majors, "Id", "Name"), "Tagline", new { @class = "lp-select" })
                                @Html.ValidationMessageFor(model => model.MajorId, null, new { @class = "help-inline" })
                                -->
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.SpamPreventionFields()
                        </div>

                        <button type="submit" class="btn btn-primary" style="margin-top: 25px;">Register</button>
                         <script type="text/javascript">
                             jQuery("label[for='_UserType_User']").html('<input data-val="true" data-val-required="The User Type: field is required." id="_UserType_User" name="UserType" type="radio" value="User"> I Like To Party');
                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $("#TagLine").hide();
                                checkUser();
                                $("#_UserType_Promoter").click(function () {
                                    checkUser();
                                });
                                $("#_UserType_User").click(function () {
                                    checkUser();
                                });
                                $("#taglineselect").change(function () {
                                    var val = $(this).val(); 
                                    if (val == "8") {
                                        $("#TagLine").val("");
                                        $("#TagLine").show();
                                    } else {
                                        $("#TagLine").hide();
                                        $("#TagLine").val(val);
                                    }                                    
                                });
                                $("form").submit(function () {
                                    if ($("#_UserType_User").is(":checked")) {
                                        if ($("#taglineselect").val() == "") {
                                            alert("Please select tagline");
                                            return false;
                                        }
                                    }
                                });
                            });

                            function checkUser() {
                                if ($("#_UserType_Promoter").is(":checked")) {
                                    $(".lp-promoters").show();
                                } else {
                                    $(".lp-promoters").hide();
                                }
                                if ($("#_UserType_User").is(":checked")) {
                                    $(".lp-majors").show();
                                } else {
                                    $(".lp-majors").hide();
                                }
                            }

                        </script>
                    </fieldset>
            
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/js")
    @Html.SpamPreventionScript()
}

